2023-02-14 02:28:11 info: ---------------------------------------
2023-02-14 02:28:11 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:28:11 info: ---------------------------------------
2023-02-14 02:28:11 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✕ should exist and be executable (1 ms)
    ✕ should have all TODO comments removed
    ✓ `getAnonName` should not contain unneeded console.log calls
    ✕ should call `new Promise()`
    ✕ should take a single argument (1 ms)
    ✕ `resolve()` should be called with a one argument (1 ms)
    ✕ `reject()` should be called with a one argument
    ✕ should resolve when called with a string argument
    ✕ should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      46 |
      47 |   test('should exist and be executable', () => {
    > 48 |     expect(exported).toBeDefined();
         |                      ^
      49 |   });
      50 |
      51 |   testTodosRemoved(() => source);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:48:22)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      54 |
      55 |   test('should call `new Promise()`', () => {
    > 56 |     expect(state.newPromise).toBeDefined();
         |                              ^
      57 |   });
      58 |
      59 |   test('should take a single argument', () => {

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:56:30)

  ● getAnonName › should take a single argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      58 |
      59 |   test('should take a single argument', () => {
    > 60 |     expect(state.paramCount).toBe(1);
         |                              ^
      61 |   });
      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:60:30)

  ● getAnonName › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {
    > 64 |     expect(state.resolve).toBe(1);
         |                           ^
      65 |   });
      66 |
      67 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:64:27)

  ● getAnonName › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      66 |
      67 |   test('`reject()` should be called with a one argument', () => {
    > 68 |     expect(state.reject).toBe(1);
         |                          ^
      69 |   });
      70 |
      71 |   test('should resolve when called with a string argument', async () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:68:26)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeDefined()

    Received: undefined

      71 |   test('should resolve when called with a string argument', async () => {
      72 |     expect.assertions(3);
    > 73 |     expect(exported).toBeDefined();
         |                      ^
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')
      76 |       .mockImplementation((cb) => cb());

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:73:22)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeDefined()

    Received: undefined

      83 |   test('should reject with an Error object when called without an argument', async () => {
      84 |     expect.assertions(3);
    > 85 |     expect(exported).toBeDefined();
         |                      ^
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')
      88 |       .mockImplementation((cb) => cb());

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:85:22)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       8 failed, 1 passed, 9 total
Snapshots:   0 total
Time:        0.209 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2023-02-14 02:28:12 error: *** ESLint Report ***

ex1-johnWho.js
  20:2  error  Parsing error: Unexpected token ;

✖ 1 problem (1 error, 0 warnings)


2023-02-14 02:29:14 info: ---------------------------------------
2023-02-14 02:29:14 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:29:14 info: ---------------------------------------
2023-02-14 02:29:15 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✕ should exist and be executable (1 ms)
    ✕ should have all TODO comments removed
    ✓ `getAnonName` should not contain unneeded console.log calls
    ✓ should call `new Promise()`
    ✕ should take a single argument (1 ms)
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✕ should resolve when called with a string argument
    ✕ should reject with an Error object when called without an argument

  ● getAnonName › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      46 |
      47 |   test('should exist and be executable', () => {
    > 48 |     expect(exported).toBeDefined();
         |                      ^
      49 |   });
      50 |
      51 |   testTodosRemoved(() => source);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:48:22)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should take a single argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      58 |
      59 |   test('should take a single argument', () => {
    > 60 |     expect(state.paramCount).toBe(1);
         |                              ^
      61 |   });
      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:60:30)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeDefined()

    Received: undefined

      71 |   test('should resolve when called with a string argument', async () => {
      72 |     expect.assertions(3);
    > 73 |     expect(exported).toBeDefined();
         |                      ^
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')
      76 |       .mockImplementation((cb) => cb());

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:73:22)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeDefined()

    Received: undefined

      83 |   test('should reject with an Error object when called without an argument', async () => {
      84 |     expect.assertions(3);
    > 85 |     expect(exported).toBeDefined();
         |                      ^
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')
      88 |       .mockImplementation((cb) => cb());

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:85:22)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       5 failed, 4 passed, 9 total
Snapshots:   0 total
Time:        0.214 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
/Users/sallysamaan/Desktop/Homework-class42/3-UsingAPIs/Week1/homework/ex1-johnWho.js:15
    resolve(fullName);
            ^

ReferenceError: Cannot access 'fullName' before initialization
    at Timeout._onTimeout (/Users/sallysamaan/Desktop/Homework-class42/3-UsingAPIs/Week1/homework/ex1-johnWho.js:15:13)
    at listOnTimeout (node:internal/timers:559:17)
    at processTimers (node:internal/timers:502:7)
2023-02-14 02:29:16 error: *** ESLint Report ***

ex1-johnWho.js
  20:1   warning  Remove commented-out code   hyf/no-commented-out-code
  27:21  error    'firstName' is not defined  no-undef

✖ 2 problems (1 error, 1 warning)


2023-02-14 02:31:26 info: ---------------------------------------
2023-02-14 02:31:26 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:31:26 info: ---------------------------------------
2023-02-14 02:31:27 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✓ should exist and be executable (1 ms)
    ✕ should have all TODO comments removed (1 ms)
    ✓ `getAnonName` should not contain unneeded console.log calls
    ✓ should call `new Promise()`
    ✕ should take a single argument (1 ms)
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✕ should resolve when called with a string argument
    ✕ should reject with an Error object when called without an argument

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should take a single argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      58 |
      59 |   test('should take a single argument', () => {
    > 60 |     expect(state.paramCount).toBe(1);
         |                              ^
      61 |   });
      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:60:30)

  ● getAnonName › should resolve when called with a string argument

    TypeError: getAnonName is not a function

      75 |       .spyOn(global, 'setTimeout')
      76 |       .mockImplementation((cb) => cb());
    > 77 |     const promise = getAnonName('John');
         |                     ^
      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
      80 |     return expect(promise).resolves.toEqual('John Doe');

      at Object.getAnonName (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:77:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    TypeError: getAnonName is not a function

      87 |       .spyOn(global, 'setTimeout')
      88 |       .mockImplementation((cb) => cb());
    > 89 |     const promise = getAnonName();
         |                     ^
      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.getAnonName (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:89:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 5 passed, 9 total
Snapshots:   0 total
Time:        0.219 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2023-02-14 02:31:27 error: *** ESLint Report ***

ex1-johnWho.js
  20:1  warning  Remove commented-out code  hyf/no-commented-out-code

✖ 1 problem (0 errors, 1 warning)


2023-02-14 02:33:19 info: ---------------------------------------
2023-02-14 02:33:19 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:33:19 info: ---------------------------------------
2023-02-14 02:33:20 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✓ should exist and be executable
    ✕ should have all TODO comments removed
    ✓ `getAnonName` should not contain unneeded console.log calls
    ✓ should call `new Promise()`
    ✕ should take a single argument (1 ms)
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✕ should resolve when called with a string argument
    ✕ should reject with an Error object when called without an argument

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should take a single argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      58 |
      59 |   test('should take a single argument', () => {
    > 60 |     expect(state.paramCount).toBe(1);
         |                              ^
      61 |   });
      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:60:30)

  ● getAnonName › should resolve when called with a string argument

    TypeError: getAnonName is not a function

      75 |       .spyOn(global, 'setTimeout')
      76 |       .mockImplementation((cb) => cb());
    > 77 |     const promise = getAnonName('John');
         |                     ^
      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
      80 |     return expect(promise).resolves.toEqual('John Doe');

      at Object.getAnonName (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:77:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    TypeError: getAnonName is not a function

      87 |       .spyOn(global, 'setTimeout')
      88 |       .mockImplementation((cb) => cb());
    > 89 |     const promise = getAnonName();
         |                     ^
      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.getAnonName (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:89:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 5 passed, 9 total
Snapshots:   0 total
Time:        0.21 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2023-02-14 02:33:20 error: *** ESLint Report ***

ex1-johnWho.js
  20:1  warning  Remove commented-out code  hyf/no-commented-out-code
  27:1  warning  Remove commented-out code  hyf/no-commented-out-code

✖ 2 problems (0 errors, 2 warnings)


2023-02-14 02:36:58 info: ---------------------------------------
2023-02-14 02:36:58 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:36:58 info: ---------------------------------------
2023-02-14 02:36:59 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✓ should exist and be executable
    ✕ should have all TODO comments removed
    ✓ `getAnonName` should not contain unneeded console.log calls
    ✓ should call `new Promise()`
    ✕ should take a single argument (1 ms)
    ✓ `resolve()` should be called with a one argument (1 ms)
    ✓ `reject()` should be called with a one argument
    ✕ should resolve when called with a string argument
    ✕ should reject with an Error object when called without an argument

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should take a single argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      58 |
      59 |   test('should take a single argument', () => {
    > 60 |     expect(state.paramCount).toBe(1);
         |                              ^
      61 |   });
      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:60:30)

  ● getAnonName › should resolve when called with a string argument

    TypeError: getAnonName is not a function

      75 |       .spyOn(global, 'setTimeout')
      76 |       .mockImplementation((cb) => cb());
    > 77 |     const promise = getAnonName('John');
         |                     ^
      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
      80 |     return expect(promise).resolves.toEqual('John Doe');

      at Object.getAnonName (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:77:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    TypeError: getAnonName is not a function

      87 |       .spyOn(global, 'setTimeout')
      88 |       .mockImplementation((cb) => cb());
    > 89 |     const promise = getAnonName();
         |                     ^
      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.getAnonName (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:89:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 5 passed, 9 total
Snapshots:   0 total
Time:        0.214 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2023-02-14 02:37:00 error: *** ESLint Report ***

ex1-johnWho.js
  20:1  warning  Remove commented-out code  hyf/no-commented-out-code
  27:1  warning  Remove commented-out code  hyf/no-commented-out-code

✖ 2 problems (0 errors, 2 warnings)


2023-02-14 02:41:23 info: ---------------------------------------
2023-02-14 02:41:23 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:41:23 info: ---------------------------------------
2023-02-14 02:41:23 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✓ should exist and be executable (1 ms)
    ✓ should have all TODO comments removed
    ✓ `getAnonName` should not contain unneeded console.log calls
    ✓ should call `new Promise()`
    ✓ should take a single argument (1 ms)
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✓ should resolve when called with a string argument (1 ms)
    ✕ should reject with an Error object when called without an argument

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "undefined Doe"

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        0.207 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2023-02-14 02:42:10 info: ---------------------------------------
2023-02-14 02:42:10 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:42:10 info: ---------------------------------------
2023-02-14 02:42:11 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✓ should exist and be executable (1 ms)
    ✓ should have all TODO comments removed
    ✓ `getAnonName` should not contain unneeded console.log calls (1 ms)
    ✓ should call `new Promise()`
    ✓ should take a single argument
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✓ should resolve when called with a string argument (1 ms)
    ✕ should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "undefined Doe"

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        0.202 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2023-02-14 02:44:17 info: ---------------------------------------
2023-02-14 02:44:17 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:44:17 info: ---------------------------------------
2023-02-14 02:44:18 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✕ should exist and be executable (1 ms)
    ✓ should have all TODO comments removed
    ✓ `getAnonName` should not contain unneeded console.log calls
    ✓ should call `new Promise()`
    ✓ should take a single argument
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument (1 ms)
    ✕ should resolve when called with a string argument
    ✕ should reject with an Error object when called without an argument

  ● getAnonName › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      46 |
      47 |   test('should exist and be executable', () => {
    > 48 |     expect(exported).toBeDefined();
         |                      ^
      49 |   });
      50 |
      51 |   testTodosRemoved(() => source);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:48:22)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeDefined()

    Received: undefined

      71 |   test('should resolve when called with a string argument', async () => {
      72 |     expect.assertions(3);
    > 73 |     expect(exported).toBeDefined();
         |                      ^
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')
      76 |       .mockImplementation((cb) => cb());

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:73:22)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeDefined()

    Received: undefined

      83 |   test('should reject with an Error object when called without an argument', async () => {
      84 |     expect.assertions(3);
    > 85 |     expect(exported).toBeDefined();
         |                      ^
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')
      88 |       .mockImplementation((cb) => cb());

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:85:22)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        0.21 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2023-02-14 02:45:20 info: ---------------------------------------
2023-02-14 02:45:20 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:45:20 info: ---------------------------------------
2023-02-14 02:45:21 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✓ should exist and be executable
    ✓ should have all TODO comments removed
    ✓ `getAnonName` should not contain unneeded console.log calls
    ✓ should call `new Promise()`
    ✓ should take a single argument (1 ms)
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✓ should resolve when called with a string argument (1 ms)
    ✕ should reject with an Error object when called without an argument

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "undefined Doe"

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        0.204 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2023-02-14 02:46:07 info: ---------------------------------------
2023-02-14 02:46:07 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:46:07 info: ---------------------------------------
2023-02-14 02:46:08 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✓ should exist and be executable
    ✓ should have all TODO comments removed
    ✓ `getAnonName` should not contain unneeded console.log calls
    ✓ should call `new Promise()`
    ✓ should take a single argument
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✓ should resolve when called with a string argument (1 ms)
    ✕ should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "undefined Doe"

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        0.211 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2023-02-14 02:46:25 info: ---------------------------------------
2023-02-14 02:46:25 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:46:25 info: ---------------------------------------
2023-02-14 02:46:25 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✓ should exist and be executable (1 ms)
    ✓ should have all TODO comments removed
    ✓ `getAnonName` should not contain unneeded console.log calls
    ✓ should call `new Promise()`
    ✓ should take a single argument
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✓ should resolve when called with a string argument (1 ms)
    ✕ should reject with an Error object when called without an argument

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "undefined Doe"

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        0.212 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2023-02-14 02:46:26 error: *** ESLint Report ***

ex1-johnWho.js
  3:9  error  'reject' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2023-02-14 02:48:35 info: ---------------------------------------
2023-02-14 02:48:35 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:48:35 info: ---------------------------------------
2023-02-14 02:48:36 info: All unit tests passed.
2023-02-14 02:48:36 error: *** ESLint Report ***

ex1-johnWho.js
   3:9  error    'reject' is assigned a value but never used  no-unused-vars
  27:1  warning  Remove commented-out code                    hyf/no-commented-out-code

✖ 2 problems (1 error, 1 warning)


2023-02-14 02:49:36 info: ---------------------------------------
2023-02-14 02:49:36 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:49:36 info: ---------------------------------------
2023-02-14 02:49:37 info: All unit tests passed.
2023-02-14 02:49:38 error: *** ESLint Report ***

ex1-johnWho.js
  3:9  error  'reject' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2023-02-14 02:50:55 info: ---------------------------------------
2023-02-14 02:50:55 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:50:55 info: ---------------------------------------
2023-02-14 02:50:56 info: All unit tests passed.
2023-02-14 02:50:57 info: All steps were completed successfully
2023-02-14 02:51:35 info: ---------------------------------------
2023-02-14 02:51:35 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:51:35 info: ---------------------------------------
2023-02-14 02:51:36 info: All unit tests passed.
2023-02-14 02:51:36 error: *** ESLint Report ***

ex1-johnWho.js
  3:9  error  'reject' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2023-02-14 02:53:15 info: ---------------------------------------
2023-02-14 02:53:15 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:53:15 info: ---------------------------------------
2023-02-14 02:53:16 info: All unit tests passed.
2023-02-14 02:53:16 error: *** ESLint Report ***

ex1-johnWho.js
  4:3  error  'reject' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2023-02-14 02:53:55 info: ---------------------------------------
2023-02-14 02:53:55 info: >>> Running Unit Test `ex1-johnWho` <<<
2023-02-14 02:53:55 info: ---------------------------------------
2023-02-14 02:53:56 info: All unit tests passed.
2023-02-14 02:53:57 info: All steps were completed successfully
2023-02-14 03:33:48 info: -------------------------------------------------
2023-02-14 03:33:48 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2023-02-14 03:33:48 info: -------------------------------------------------
2023-02-14 03:33:49 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    ✕ should exist and be executable (1 ms)
    ✓ should have all TODO comments removed (3 ms)
    ✓ `checkDoubleDigits` should not contain unneeded console.log calls
    ✕ should call new Promise() (1 ms)
    ✕ `resolve()` should be called with a one argument (1 ms)
    ✕ `reject()` should be called with a one argument
    ✕ should be a function that takes a single argument
    ✕ (9) should return a rejected promise with an Error object (1 ms)
    ✕ (10) should return a promise that resolves to "This is a double digit number!"
    ✕ (99) should return a promise that resolves to "This is a double digit number!"
    ✕ (100) should return a rejected promise with an Error object

  ● checkDoubleDigits › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      35 |
      36 |   test('should exist and be executable', () => {
    > 37 |     expect(exported).toBeDefined();
         |                      ^
      38 |   });
      39 |
      40 |   testTodosRemoved(() => source);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:37:22)

  ● checkDoubleDigits › should call new Promise()

    expect(received).toBeDefined()

    Received: undefined

      43 |
      44 |   test('should call new Promise()', () => {
    > 45 |     expect(state.newPromise).toBeDefined();
         |                              ^
      46 |   });
      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:45:30)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › should be a function that takes a single argument

    expect(received).toBeDefined()

    Received: undefined

      55 |
      56 |   test('should be a function that takes a single argument', () => {
    > 57 |     expect(exported).toBeDefined();
         |                      ^
      58 |     expect(
      59 |       typeof checkDoubleDigits === 'function' && checkDoubleDigits.length === 1
      60 |     ).toBe(true);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:57:22)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      63 |   test('(9) should return a rejected promise with an Error object', () => {
      64 |     expect.assertions(2);
    > 65 |     const promise = checkDoubleDigits(9);
         |                     ^
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);
      68 |   });

      at Object.checkDoubleDigits (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:65:21)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).toBeDefined()

    Received: undefined

      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
      71 |     expect.assertions(3);
    > 72 |     expect(exported).toBeDefined();
         |                      ^
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
      75 |     return expect(promise).resolves.toEqual(

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:72:22)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    TypeError: checkDoubleDigits is not a function

      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
      81 |     expect.assertions(2);
    > 82 |     const promise = checkDoubleDigits(99);
         |                     ^
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(
      85 |       expect.stringContaining('This is a double digit number!')

      at Object.checkDoubleDigits (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:82:21)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      89 |   test('(100) should return a rejected promise with an Error object', () => {
      90 |     expect.assertions(2);
    > 91 |     const promise = checkDoubleDigits(100);
         |                     ^
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);
      94 |   });

      at Object.checkDoubleDigits (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:91:21)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       9 failed, 2 passed, 11 total
Snapshots:   0 total
Time:        0.301 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2023-02-14 03:33:49 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  21:22  error  Parsing error: Unexpected token {

✖ 1 problem (1 error, 0 warnings)


2023-02-14 03:52:30 info: -------------------------------------------------
2023-02-14 03:52:30 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2023-02-14 03:52:30 info: -------------------------------------------------
2023-02-14 03:52:31 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    ✕ should exist and be executable (1 ms)
    ✓ should have all TODO comments removed
    ✓ `checkDoubleDigits` should not contain unneeded console.log calls
    ✕ should call new Promise()
    ✕ `resolve()` should be called with a one argument (1 ms)
    ✕ `reject()` should be called with a one argument
    ✕ should be a function that takes a single argument
    ✕ (9) should return a rejected promise with an Error object (1 ms)
    ✕ (10) should return a promise that resolves to "This is a double digit number!"
    ✕ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    ✕ (100) should return a rejected promise with an Error object

  ● checkDoubleDigits › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      35 |
      36 |   test('should exist and be executable', () => {
    > 37 |     expect(exported).toBeDefined();
         |                      ^
      38 |   });
      39 |
      40 |   testTodosRemoved(() => source);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:37:22)

  ● checkDoubleDigits › should call new Promise()

    expect(received).toBeDefined()

    Received: undefined

      43 |
      44 |   test('should call new Promise()', () => {
    > 45 |     expect(state.newPromise).toBeDefined();
         |                              ^
      46 |   });
      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:45:30)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › should be a function that takes a single argument

    expect(received).toBeDefined()

    Received: undefined

      55 |
      56 |   test('should be a function that takes a single argument', () => {
    > 57 |     expect(exported).toBeDefined();
         |                      ^
      58 |     expect(
      59 |       typeof checkDoubleDigits === 'function' && checkDoubleDigits.length === 1
      60 |     ).toBe(true);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:57:22)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      63 |   test('(9) should return a rejected promise with an Error object', () => {
      64 |     expect.assertions(2);
    > 65 |     const promise = checkDoubleDigits(9);
         |                     ^
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);
      68 |   });

      at Object.checkDoubleDigits (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:65:21)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).toBeDefined()

    Received: undefined

      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
      71 |     expect.assertions(3);
    > 72 |     expect(exported).toBeDefined();
         |                      ^
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
      75 |     return expect(promise).resolves.toEqual(

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:72:22)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    TypeError: checkDoubleDigits is not a function

      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
      81 |     expect.assertions(2);
    > 82 |     const promise = checkDoubleDigits(99);
         |                     ^
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(
      85 |       expect.stringContaining('This is a double digit number!')

      at Object.checkDoubleDigits (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:82:21)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      89 |   test('(100) should return a rejected promise with an Error object', () => {
      90 |     expect.assertions(2);
    > 91 |     const promise = checkDoubleDigits(100);
         |                     ^
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);
      94 |   });

      at Object.checkDoubleDigits (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:91:21)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       9 failed, 2 passed, 11 total
Snapshots:   0 total
Time:        0.262 s, estimated 1 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2023-02-14 03:52:32 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  24:22  error  Parsing error: Unexpected token {

✖ 1 problem (1 error, 0 warnings)


2023-02-14 04:11:58 info: -------------------------------------------------
2023-02-14 04:11:58 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2023-02-14 04:11:58 info: -------------------------------------------------
2023-02-14 04:11:59 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    ✕ should exist and be executable (1 ms)
    ✓ should have all TODO comments removed
    ✓ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    ✕ should call new Promise()
    ✕ `resolve()` should be called with a one argument (1 ms)
    ✕ `reject()` should be called with a one argument
    ✕ should be a function that takes a single argument (1 ms)
    ✕ (9) should return a rejected promise with an Error object
    ✕ (10) should return a promise that resolves to "This is a double digit number!"
    ✕ (99) should return a promise that resolves to "This is a double digit number!"
    ✕ (100) should return a rejected promise with an Error object

  ● checkDoubleDigits › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      35 |
      36 |   test('should exist and be executable', () => {
    > 37 |     expect(exported).toBeDefined();
         |                      ^
      38 |   });
      39 |
      40 |   testTodosRemoved(() => source);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:37:22)

  ● checkDoubleDigits › should call new Promise()

    expect(received).toBeDefined()

    Received: undefined

      43 |
      44 |   test('should call new Promise()', () => {
    > 45 |     expect(state.newPromise).toBeDefined();
         |                              ^
      46 |   });
      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:45:30)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › should be a function that takes a single argument

    expect(received).toBeDefined()

    Received: undefined

      55 |
      56 |   test('should be a function that takes a single argument', () => {
    > 57 |     expect(exported).toBeDefined();
         |                      ^
      58 |     expect(
      59 |       typeof checkDoubleDigits === 'function' && checkDoubleDigits.length === 1
      60 |     ).toBe(true);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:57:22)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      63 |   test('(9) should return a rejected promise with an Error object', () => {
      64 |     expect.assertions(2);
    > 65 |     const promise = checkDoubleDigits(9);
         |                     ^
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);
      68 |   });

      at Object.checkDoubleDigits (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:65:21)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).toBeDefined()

    Received: undefined

      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
      71 |     expect.assertions(3);
    > 72 |     expect(exported).toBeDefined();
         |                      ^
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
      75 |     return expect(promise).resolves.toEqual(

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:72:22)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    TypeError: checkDoubleDigits is not a function

      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
      81 |     expect.assertions(2);
    > 82 |     const promise = checkDoubleDigits(99);
         |                     ^
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(
      85 |       expect.stringContaining('This is a double digit number!')

      at Object.checkDoubleDigits (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:82:21)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      89 |   test('(100) should return a rejected promise with an Error object', () => {
      90 |     expect.assertions(2);
    > 91 |     const promise = checkDoubleDigits(100);
         |                     ^
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);
      94 |   });

      at Object.checkDoubleDigits (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:91:21)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       9 failed, 2 passed, 11 total
Snapshots:   0 total
Time:        0.273 s, estimated 1 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2023-02-14 04:12:00 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  27:22  error  Parsing error: Unexpected token {

✖ 1 problem (1 error, 0 warnings)


2023-02-14 04:13:11 info: -------------------------------------------------
2023-02-14 04:13:11 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2023-02-14 04:13:11 info: -------------------------------------------------
2023-02-14 04:13:12 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    ✕ should exist and be executable (1 ms)
    ✓ should have all TODO comments removed
    ✓ `checkDoubleDigits` should not contain unneeded console.log calls
    ✕ should call new Promise()
    ✕ `resolve()` should be called with a one argument (1 ms)
    ✕ `reject()` should be called with a one argument
    ✕ should be a function that takes a single argument (1 ms)
    ✕ (9) should return a rejected promise with an Error object
    ✕ (10) should return a promise that resolves to "This is a double digit number!"
    ✕ (99) should return a promise that resolves to "This is a double digit number!"
    ✕ (100) should return a rejected promise with an Error object

  ● checkDoubleDigits › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      35 |
      36 |   test('should exist and be executable', () => {
    > 37 |     expect(exported).toBeDefined();
         |                      ^
      38 |   });
      39 |
      40 |   testTodosRemoved(() => source);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:37:22)

  ● checkDoubleDigits › should call new Promise()

    expect(received).toBeDefined()

    Received: undefined

      43 |
      44 |   test('should call new Promise()', () => {
    > 45 |     expect(state.newPromise).toBeDefined();
         |                              ^
      46 |   });
      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:45:30)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › should be a function that takes a single argument

    expect(received).toBeDefined()

    Received: undefined

      55 |
      56 |   test('should be a function that takes a single argument', () => {
    > 57 |     expect(exported).toBeDefined();
         |                      ^
      58 |     expect(
      59 |       typeof checkDoubleDigits === 'function' && checkDoubleDigits.length === 1
      60 |     ).toBe(true);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:57:22)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      63 |   test('(9) should return a rejected promise with an Error object', () => {
      64 |     expect.assertions(2);
    > 65 |     const promise = checkDoubleDigits(9);
         |                     ^
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);
      68 |   });

      at Object.checkDoubleDigits (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:65:21)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).toBeDefined()

    Received: undefined

      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
      71 |     expect.assertions(3);
    > 72 |     expect(exported).toBeDefined();
         |                      ^
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
      75 |     return expect(promise).resolves.toEqual(

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:72:22)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    TypeError: checkDoubleDigits is not a function

      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
      81 |     expect.assertions(2);
    > 82 |     const promise = checkDoubleDigits(99);
         |                     ^
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(
      85 |       expect.stringContaining('This is a double digit number!')

      at Object.checkDoubleDigits (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:82:21)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      89 |   test('(100) should return a rejected promise with an Error object', () => {
      90 |     expect.assertions(2);
    > 91 |     const promise = checkDoubleDigits(100);
         |                     ^
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);
      94 |   });

      at Object.checkDoubleDigits (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:91:21)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       9 failed, 2 passed, 11 total
Snapshots:   0 total
Time:        0.264 s, estimated 1 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2023-02-14 04:13:12 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  27:25  error  Parsing error: Unexpected token {

✖ 1 problem (1 error, 0 warnings)


2023-02-14 04:14:11 info: -------------------------------------------------
2023-02-14 04:14:11 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2023-02-14 04:14:11 info: -------------------------------------------------
2023-02-14 04:14:12 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    ✓ should exist and be executable (1 ms)
    ✓ should have all TODO comments removed
    ✓ `checkDoubleDigits` should not contain unneeded console.log calls
    ✓ should call new Promise()
    ✓ `resolve()` should be called with a one argument (1 ms)
    ✓ `reject()` should be called with a one argument
    ✓ should be a function that takes a single argument
    ✕ (9) should return a rejected promise with an Error object (3 ms)
    ✓ (10) should return a promise that resolves to "This is a double digit number!" (2 ms)
    ✓ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    ✕ (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:12)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      94 |   });
      95 | });
      96 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        0.221 s, estimated 1 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2023-02-14 04:14:13 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  21:7  warning  Remove commented-out code  hyf/no-commented-out-code

✖ 1 problem (0 errors, 1 warning)


2023-02-14 04:15:00 info: -------------------------------------------------
2023-02-14 04:15:00 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2023-02-14 04:15:00 info: -------------------------------------------------
2023-02-14 04:15:01 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    ✓ should exist and be executable
    ✓ should have all TODO comments removed
    ✓ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    ✓ should call new Promise()
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✓ should be a function that takes a single argument
    ✕ (9) should return a rejected promise with an Error object (1 ms)
    ✓ (10) should return a promise that resolves to "This is a double digit number!" (3 ms)
    ✓ (99) should return a promise that resolves to "This is a double digit number!" (2 ms)
    ✕ (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:12)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      94 |   });
      95 | });
      96 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        0.218 s, estimated 1 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2023-02-14 04:15:02 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  21:7  warning  Remove commented-out code  hyf/no-commented-out-code

✖ 1 problem (0 errors, 1 warning)


2023-02-14 04:15:27 info: -------------------------------------------------
2023-02-14 04:15:27 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2023-02-14 04:15:27 info: -------------------------------------------------
2023-02-14 04:15:28 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    ✓ should exist and be executable (1 ms)
    ✓ should have all TODO comments removed
    ✓ `checkDoubleDigits` should not contain unneeded console.log calls
    ✓ should call new Promise()
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✓ should be a function that takes a single argument
    ✕ (9) should return a rejected promise with an Error object (3 ms)
    ✓ (10) should return a promise that resolves to "This is a double digit number!" (1 ms)
    ✓ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    ✕ (100) should return a rejected promise with an Error object

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:12)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      94 |   });
      95 | });
      96 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        0.216 s, estimated 1 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2023-02-14 04:16:07 info: -------------------------------------------------
2023-02-14 04:16:07 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2023-02-14 04:16:07 info: -------------------------------------------------
2023-02-14 04:16:07 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    ✓ should exist and be executable
    ✓ should have all TODO comments removed
    ✓ `checkDoubleDigits` should not contain unneeded console.log calls
    ✓ should call new Promise()
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✓ should be a function that takes a single argument
    ✕ (9) should return a rejected promise with an Error object (3 ms)
    ✓ (10) should return a promise that resolves to "This is a double digit number!" (1 ms)
    ✓ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    ✕ (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:12)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      94 |   });
      95 | });
      96 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        0.221 s, estimated 1 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2023-02-14 04:16:42 info: -------------------------------------------------
2023-02-14 04:16:42 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2023-02-14 04:16:42 info: -------------------------------------------------
2023-02-14 04:16:43 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    ✓ should exist and be executable
    ✓ should have all TODO comments removed
    ✓ `checkDoubleDigits` should not contain unneeded console.log calls
    ✓ should call new Promise()
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✓ should be a function that takes a single argument
    ✕ (9) should return a rejected promise with an Error object (3 ms)
    ✓ (10) should return a promise that resolves to "This is a double digit number!" (2 ms)
    ✓ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    ✕ (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:12)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      94 |   });
      95 | });
      96 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        0.221 s, estimated 1 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2023-02-14 04:18:32 info: -------------------------------------------------
2023-02-14 04:18:32 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2023-02-14 04:18:32 info: -------------------------------------------------
2023-02-14 04:18:33 info: All unit tests passed.
2023-02-14 04:18:35 info: All steps were completed successfully
2023-02-14 05:27:45 info: -------------------------------------------------
2023-02-14 05:27:45 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2023-02-14 05:27:45 info: -------------------------------------------------
2023-02-14 05:27:46 info: All unit tests passed.
2023-02-14 05:27:47 info: All steps were completed successfully
2023-02-14 05:28:19 info: ---------------------------------------
2023-02-14 05:28:19 info: >>> Running Unit Test `ex3-rollDie` <<<
2023-02-14 05:28:19 info: ---------------------------------------
2023-02-14 05:28:19 info: Exercise has not yet been modified
2023-02-14 05:28:20 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    ✓ should exist and be executable (1 ms)
    ✕ should have all TODO comments removed (1 ms)
    ✕ should call `new Promise()`
    ✕ `resolve()` should be called with a one argument (1 ms)
    ✕ `reject()` should be called with a one argument
    ✕ should resolve when the die settles successfully
    ✕ should reject with an Error when the die rolls off the table

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

  ● rollDie › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      38 |
      39 |   test('should call `new Promise()`', () => {
    > 40 |     expect(state.newPromise).toBeDefined();
         |                              ^
      41 |   });
      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:40:30)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

  ● rollDie › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      46 |
      47 |   test('`reject()` should be called with a one argument', () => {
    > 48 |     expect(state.reject).toBe(1);
         |                          ^
      49 |   });
      50 |
      51 |   test('should resolve when the die settles successfully', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:48:26)

  ● rollDie › should resolve when the die settles successfully

    TypeError: callback is not a function

      32 |     if (roll === randomRollsToDo) {
      33 |       // TODO replace "success" callback
    > 34 |       callback(null, value);
         |       ^
      35 |     }
      36 |
      37 |     // Schedule the next roll todo until no more rolls to do

      at callback (3-UsingAPIs/Week1/homework/ex3-rollDie.js:34:7)
      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:39:24)
      at cb (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:59:35)
      at setTimeout (3-UsingAPIs/Week1/homework/ex3-rollDie.js:39:7)
      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:39:24)
      at cb (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:59:35)
      at setTimeout (3-UsingAPIs/Week1/homework/ex3-rollDie.js:39:7)
      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:44:3)
      at Object.rollDie (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:61:21)

  ● rollDie › should resolve when the die settles successfully

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      50 |
      51 |   test('should resolve when the die settles successfully', () => {
    > 52 |     expect.assertions(3);
         |            ^
      53 |     expect(exported).toBeDefined();
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:52:12)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      73 |
      74 |   test('should reject with an Error when the die rolls off the table', async () => {
    > 75 |     expect.assertions(3);
         |            ^
      76 |     expect(exported).toBeDefined();
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:75:12)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 1 passed, 7 total
Snapshots:   0 total
Time:        0.229 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2023-02-14 06:38:01 info: ---------------------------------------
2023-02-14 06:38:01 info: >>> Running Unit Test `ex3-rollDie` <<<
2023-02-14 06:38:01 info: ---------------------------------------
2023-02-14 06:38:01 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    ✓ should exist and be executable (1 ms)
    ✕ should have all TODO comments removed (1 ms)
    ✓ should call `new Promise()`
    ✓ `resolve()` should be called with a one argument (1 ms)
    ✓ `reject()` should be called with a one argument
    ✓ should resolve when the die settles successfully
    ✓ should reject with an Error when the die rolls off the table

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.208 s, estimated 1 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2023-02-14 06:39:15 info: ---------------------------------------
2023-02-14 06:39:15 info: >>> Running Unit Test `ex3-rollDie` <<<
2023-02-14 06:39:15 info: ---------------------------------------
2023-02-14 06:39:15 info: All unit tests passed.
2023-02-14 06:39:17 info: All steps were completed successfully
2023-02-14 06:40:31 info: ---------------------------------------
2023-02-14 06:40:31 info: >>> Running Unit Test `ex3-rollDie` <<<
2023-02-14 06:40:31 info: ---------------------------------------
2023-02-14 06:40:32 info: All unit tests passed.
2023-02-14 06:40:33 info: All steps were completed successfully
2023-02-14 07:02:42 info: ---------------------------------------
2023-02-14 07:02:42 info: >>> Running Unit Test `ex3-rollDie` <<<
2023-02-14 07:02:42 info: ---------------------------------------
2023-02-14 07:02:43 info: All unit tests passed.
2023-02-14 07:02:44 info: All steps were completed successfully
2023-02-14 07:27:31 info: --------------------------------------------
2023-02-14 07:27:31 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2023-02-14 07:27:31 info: --------------------------------------------
2023-02-14 07:27:32 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    ✓ should exist and be executable (1 ms)
    ✓ should have all TODO comments removed
    ✓ `rollDice` should not contain unneeded console.log calls (1 ms)
    ✓ should use `dice.map()`
    ✓ should use `Promise.all()`
    ✕ should resolve when all dice settle successfully
    ✕ should reject with an Error when a die rolls off the table (1 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    ReferenceError: dice is not defined

      28 |
      29 | function rollDice() {
    > 30 |   const promises = dice.map((dice) => rollDie(dice));
         |                    ^
      31 |   return Promise.all(promises);
      32 | }
      33 |

      at dice (3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:30:20)
      at Object.rollDice (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:53:21)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      63 |
      64 |   test('should reject with an Error when a die rolls off the table', async () => {
    > 65 |     expect.assertions(3);
         |            ^
      66 |     expect(exported).toBeDefined();
      67 |
      68 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:65:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 5 passed, 7 total
Snapshots:   0 total
Time:        0.229 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2023-02-14 07:27:32 error: *** ESLint Report ***

ex4-pokerDiceAll.js
  30:20  error  'dice' is not defined  no-undef

✖ 1 problem (1 error, 0 warnings)


2023-02-14 07:30:11 info: --------------------------------------------
2023-02-14 07:30:11 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2023-02-14 07:30:11 info: --------------------------------------------
2023-02-14 07:30:12 info: All unit tests passed.
2023-02-14 07:30:14 info: All steps were completed successfully
2023-02-14 07:36:14 info: ----------------------------------------------
2023-02-14 07:36:14 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2023-02-14 07:36:14 info: ----------------------------------------------
2023-02-14 07:36:15 error: *** Unit Test Error Report ***

Command failed: npx jest ex5-pokerDiceChain.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js
  ex5-pokerDiceChain
    ✓ should exist and be executable
    ✓ should have all TODO comments removed
    ✓ `rollDice` should not contain unneeded console.log calls
    ✕ should resolve when all dice settle successfully (12 ms)
    ✓ should reject with an Error when a die rolls off the table (27 ms)

  ● ex5-pokerDiceChain › should resolve when all dice settle successfully

    expect(received).toHaveLength(expected)

    Expected length: 5
    Received length: 4
    Received array:  ["NINE", "NINE", "NINE", "NINE"]

      33 |     const result = await promise;
      34 |     expect(Array.isArray(result)).toBe(true);
    > 35 |     expect(result).toHaveLength(5);
         |                    ^
      36 |
      37 |     promise.finally(() => {
      38 |       randomSpy.mockRestore();

      at Object.toHaveLength (3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js:35:20)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        0.261 s
Ran all test suites matching /ex5-pokerDiceChain.test.js/i.
2023-02-14 07:37:57 info: ----------------------------------------------
2023-02-14 07:37:57 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2023-02-14 07:37:57 info: ----------------------------------------------
2023-02-14 07:37:58 info: All unit tests passed.
2023-02-14 07:37:59 info: All steps were completed successfully
