2023-01-09 07:09:32 info: ----------------------------------------------
2023-01-09 07:09:32 info: >>> Running Unit Test `ex1-giveCompliment` <<<
2023-01-09 07:09:32 info: ----------------------------------------------
2023-01-09 07:09:37 error: *** Unit Test Error Report ***

✕ giveCompliment should have all TODO comments removed
✕ giveCompliment should give a random compliment: You are `compliment`, `name`!
  Expected: You are awesome, HackYourFuture!
  Received: You are awesome, HackYourFuture


Command failed: npx jest ex1-giveCompliment.test.js --colors --reporters="C:\Users\aoali\desktop\HYF_PROJECT\week6\Homework-class42\test-runner\CustomReporter.js"
2023-01-09 07:31:08 info: ----------------------------------------------
2023-01-09 07:31:08 info: >>> Running Unit Test `ex1-giveCompliment` <<<
2023-01-09 07:31:08 info: ----------------------------------------------
2023-01-09 07:31:13 error: *** Unit Test Error Report ***

✕ giveCompliment should have all TODO comments removed


Command failed: npx jest ex1-giveCompliment.test.js --colors --reporters="C:\Users\aoali\desktop\HYF_PROJECT\week6\Homework-class42\test-runner\CustomReporter.js"
2023-01-09 07:32:28 info: ----------------------------------------------
2023-01-09 07:32:28 info: >>> Running Unit Test `ex1-giveCompliment` <<<
2023-01-09 07:32:28 info: ----------------------------------------------
2023-01-09 07:32:33 error: *** Unit Test Error Report ***

✕ giveCompliment should have all TODO comments removed


Command failed: npx jest ex1-giveCompliment.test.js --colors --reporters="C:\Users\aoali\desktop\HYF_PROJECT\week6\Homework-class42\test-runner\CustomReporter.js"
2023-01-09 07:38:32 info: ----------------------------------------------
2023-01-09 07:38:32 info: >>> Running Unit Test `ex1-giveCompliment` <<<
2023-01-09 07:38:32 info: ----------------------------------------------
2023-01-09 07:38:36 info: All unit tests passed.
2023-01-09 07:38:42 info: All steps were completed successfully
2023-01-09 07:59:00 info: ----------------------------------------
2023-01-09 07:59:00 info: >>> Running Unit Test `ex2-dogYears` <<<
2023-01-09 07:59:00 info: ----------------------------------------
2023-01-09 07:59:04 info: All unit tests passed.
2023-01-09 07:59:11 info: All steps were completed successfully
2023-01-09 08:11:04 info: --------------------------------------------
2023-01-09 08:11:04 info: >>> Running Unit Test `ex4-shoppingCart` <<<
2023-01-09 08:11:04 info: --------------------------------------------
2023-01-09 08:11:04 warn: A unit test file was not provided.
2023-01-09 08:11:12 info: All steps were completed successfully
2023-01-09 08:12:50 info: --------------------------------------------
2023-01-09 08:12:50 info: >>> Running Unit Test `ex4-shoppingCart` <<<
2023-01-09 08:12:50 info: --------------------------------------------
2023-01-09 08:12:50 warn: A unit test file was not provided.
2023-01-09 08:12:57 info: All steps were completed successfully
2023-01-09 08:18:37 info: -------------------------------------------
2023-01-09 08:18:37 info: >>> Running Unit Test `ex7-mindPrivacy` <<<
2023-01-09 08:18:37 info: -------------------------------------------
2023-01-09 08:18:37 warn: A unit test file was not provided.
2023-01-09 08:18:44 info: All steps were completed successfully
2023-01-09 08:24:10 info: ------------------------------------------------
2023-01-09 08:24:10 info: >>> Running Unit Test `ex5-shoppingCartPure` <<<
2023-01-09 08:24:10 info: ------------------------------------------------
2023-01-09 08:24:10 warn: A unit test file was not provided.
2023-01-09 08:24:17 info: All steps were completed successfully
2023-01-10 05:21:35 info: -----------------------------------------
2023-01-10 05:21:36 info: >>> Running Unit Test `ex6-totalCost` <<<
2023-01-10 05:21:36 info: -----------------------------------------
2023-01-10 05:21:36 warn: A unit test file was not provided.
2023-01-10 05:21:43 info: All steps were completed successfully
2023-01-10 06:54:45 info: -------------------------------------------
2023-01-10 06:54:45 info: >>> Running Unit Test `ex3-tellFortune` <<<
2023-01-10 06:54:45 info: -------------------------------------------
2023-01-10 06:54:48 error: *** Unit Test Error Report ***

✕ tellFortune should tell the fortune by randomly selecting array values
  Expected: You will be a Developer in Istanbul, married to Jan with 1 kids.
  Received: You will be a Developer in Istanbul, married to Jan with 1 kid.


Command failed: npx jest ex3-tellFortune.test.js --colors --reporters="C:\Users\aoali\desktop\HYF_PROJECT\week6\Homework-class42\test-runner\CustomReporter.js"
2023-01-10 06:56:34 info: -------------------------------------------
2023-01-10 06:56:34 info: >>> Running Unit Test `ex3-tellFortune` <<<
2023-01-10 06:56:34 info: -------------------------------------------
2023-01-10 06:56:37 info: All unit tests passed.
2023-01-10 06:56:41 info: All steps were completed successfully
2023-01-23 12:15:11 info: ---------------------------------------
2023-01-23 12:15:11 info: >>> Running Unit Test `ex2-aboutMe` <<<
2023-01-23 12:15:11 info: ---------------------------------------
2023-01-23 12:15:20 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js
  Generated HTML
    √ should be syntactically valid (182 ms)
    √ should have all TODO comments removed (1 ms)
    × the body font-family should be `Arial, sans-serif` (5 ms)
    √ each <li> should have the CSS class `list-item` (1 ms)
    √ each <li> should rendered red (51 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.toEqual (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        5.067 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
2023-01-23 12:16:29 info: ---------------------------------------
2023-01-23 12:16:29 info: >>> Running Unit Test `ex2-aboutMe` <<<
2023-01-23 12:16:29 info: ---------------------------------------
2023-01-23 12:16:37 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js
  Generated HTML
    √ should be syntactically valid (181 ms)
    √ should have all TODO comments removed (1 ms)
    × the body font-family should be `Arial, sans-serif` (4 ms)
    √ each <li> should have the CSS class `list-item` (2 ms)
    √ each <li> should rendered red (47 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.toEqual (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        4.02 s, estimated 5 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
2023-01-23 12:19:30 info: Disclaimer turned off
2023-01-23 12:19:43 info: ---------------------------------------
2023-01-23 12:19:43 info: >>> Running Unit Test `ex2-aboutMe` <<<
2023-01-23 12:19:43 info: ---------------------------------------
2023-01-23 12:19:51 info: All unit tests passed.
2023-01-23 12:19:57 info: All steps were completed successfully
2023-01-23 12:36:28 info: ----------------------------------------
2023-01-23 12:36:28 info: >>> Running Unit Test `ex1-bookList` <<<
2023-01-23 12:36:28 info: ----------------------------------------
2023-01-23 12:36:38 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-bookList.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex1-bookList.test.js (5.166 s)
  Generated HTML
    √ HTML should be syntactically valid (256 ms)
    √ should have all TODO comments removed (1 ms)
    × should contain a <ul> that is a child of <div id="bookList"> (4 ms)
    × should contain a <ul> with 3 <li> elements (4 ms)
    × should contain an <li> with title and author for each book of the `myBooks` array (2 ms)
    × should contain an <img> element for each book (2 ms)

  ● Generated HTML › should contain a <ul> that is a child of <div id="bookList">

    expect(received).toBeTruthy()

    Received: null

      46 |   test('should contain a <ul> that is a child of <div id="bookList">', () => {
      47 |     const ul = document.querySelector('div[id=bookList] > ul');
    > 48 |     expect(ul).toBeTruthy();
         |                ^
      49 |   });
      50 |
      51 |   test('should contain a <ul> with 3 <li> elements', () => {

      at Object.toBeTruthy (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:48:16)

  ● Generated HTML › should contain a <ul> with 3 <li> elements

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 0

      52 |     const nodeList = document.querySelectorAll('ul > li');
      53 |     const result = nodeList ? nodeList.length : 0;
    > 54 |     expect(result).toBe(3);
         |                    ^
      55 |   });
      56 |
      57 |   test('should contain an <li> with title and author for each book of the `myBooks` array', () => {

      at Object.toBe (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:54:20)

  ● Generated HTML › should contain an <li> with title and author for each book of the `myBooks` array

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "The Design of Everyday Things"
    Received: ""

      63 |       : '';
      64 |     state.titlesAndAuthors.forEach((string) =>
    > 65 |       expect(result).toEqual(expect.stringContaining(string))
         |                      ^
      66 |     );
      67 |   });
      68 |

      at toEqual (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:65:22)
          at Array.forEach (<anonymous>)
      at Object.forEach (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:64:28)

  ● Generated HTML › should contain an <img> element for each book

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 0

      70 |     const nodeList = document.querySelectorAll('li img');
      71 |     const result = nodeList ? nodeList.length : 0;
    > 72 |     expect(result).toBe(3);
         |                    ^
      73 |   });
      74 | });
      75 |

      at Object.toBe (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:72:20)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 2 passed, 6 total
Snapshots:   0 total
Time:        5.318 s
Ran all test suites matching /ex1-bookList.test.js/i.
