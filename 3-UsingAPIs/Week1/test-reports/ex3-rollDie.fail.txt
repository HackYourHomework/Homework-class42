*** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ should call `new Promise()` (1 ms)
    × `resolve()` should be called with a one argument (4 ms)
    √ `reject()` should be called with a one argument
    × should resolve when the die settles successfully (1 ms)
    × should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

  ● rollDie › should resolve when the die settles successfully

    TypeError: rollDie is not a function

      59 |       .mockImplementation((cb) => cb());
      60 |
    > 61 |     const promise = rollDie();
         |                     ^
      62 |     expect(promise).toBeInstanceOf(Promise);
      63 |     const assertionPromise = expect(promise).resolves.toBeDefined();
      64 |

      at Object.rollDie (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:61:21)

  ● rollDie › should resolve when the die settles successfully

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      50 |
      51 |   test('should resolve when the die settles successfully', () => {
    > 52 |     expect.assertions(3);
         |            ^
      53 |     expect(exported).toBeDefined();
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:52:12)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      73 |
      74 |   test('should reject with an Error when the die rolls off the table', async () => {
    > 75 |     expect.assertions(3);
         |            ^
      76 |     expect(exported).toBeDefined();
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:75:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 4 passed, 7 total
Snapshots:   0 total
Time:        4.599 s
Ran all test suites matching /ex3-rollDie.test.js/i.

  ●  Cannot log after tests are done. Did you forget to wait for something async in your test?
    Attempted to log "Die value is now: 1".

      20 |     // Compute a random die value for the current roll
      21 |     const value = Math.floor(Math.random() * 6) + 1;
    > 22 |     console.log(`Die value is now: ${value}`);
         |             ^
      23 |
      24 |     // Use callback to notify that the die rolled off the table after 6 rolls
      25 |     if (roll > 6) {

      at console.log (node_modules/@jest/console/build/CustomConsole.js:172:10)
      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:22:13)
      at Timeout._onTimeout (3-UsingAPIs/Week1/homework/ex3-rollDie.js:35:24)


  ●  Cannot log after tests are done. Did you forget to wait for something async in your test?
    Attempted to log "Die value is now: 2".

      20 |     // Compute a random die value for the current roll
      21 |     const value = Math.floor(Math.random() * 6) + 1;
    > 22 |     console.log(`Die value is now: ${value}`);
         |             ^
      23 |
      24 |     // Use callback to notify that the die rolled off the table after 6 rolls
      25 |     if (roll > 6) {

      at console.log (node_modules/@jest/console/build/CustomConsole.js:172:10)
      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:22:13)
      at Timeout._onTimeout (3-UsingAPIs/Week1/homework/ex3-rollDie.js:35:24)

Jest did not exit one second after the test run has completed.

This usually means that there are asynchronous operations that weren't stopped in your tests. Consider running Jest with `--detectOpenHandles` to troubleshoot this issue.

  ●  Cannot log after tests are done. Did you forget to wait for something async in your test?
    Attempted to log "Die value is now: 5".

      20 |     // Compute a random die value for the current roll
      21 |     const value = Math.floor(Math.random() * 6) + 1;
    > 22 |     console.log(`Die value is now: ${value}`);
         |             ^
      23 |
      24 |     // Use callback to notify that the die rolled off the table after 6 rolls
      25 |     if (roll > 6) {

      at console.log (node_modules/@jest/console/build/CustomConsole.js:172:10)
      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:22:13)
      at Timeout._onTimeout (3-UsingAPIs/Week1/homework/ex3-rollDie.js:35:24)


  ●  Cannot log after tests are done. Did you forget to wait for something async in your test?
    Attempted to log "Die value is now: 3".

      20 |     // Compute a random die value for the current roll
      21 |     const value = Math.floor(Math.random() * 6) + 1;
    > 22 |     console.log(`Die value is now: ${value}`);
         |             ^
      23 |
      24 |     // Use callback to notify that the die rolled off the table after 6 rolls
      25 |     if (roll > 6) {

      at console.log (node_modules/@jest/console/build/CustomConsole.js:172:10)
      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:22:13)
      at Timeout._onTimeout (3-UsingAPIs/Week1/homework/ex3-rollDie.js:35:24)


  ●  Cannot log after tests are done. Did you forget to wait for something async in your test?
    Attempted to log "Die value is now: 6".

      20 |     // Compute a random die value for the current roll
      21 |     const value = Math.floor(Math.random() * 6) + 1;
    > 22 |     console.log(`Die value is now: ${value}`);
         |             ^
      23 |
      24 |     // Use callback to notify that the die rolled off the table after 6 rolls
      25 |     if (roll > 6) {

      at console.log (node_modules/@jest/console/build/CustomConsole.js:172:10)
      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:22:13)
      at Timeout._onTimeout (3-UsingAPIs/Week1/homework/ex3-rollDie.js:35:24)


  ●  Cannot log after tests are done. Did you forget to wait for something async in your test?
    Attempted to log "Die value is now: 2".

      20 |     // Compute a random die value for the current roll
      21 |     const value = Math.floor(Math.random() * 6) + 1;
    > 22 |     console.log(`Die value is now: ${value}`);
         |             ^
      23 |
      24 |     // Use callback to notify that the die rolled off the table after 6 rolls
      25 |     if (roll > 6) {

      at console.log (node_modules/@jest/console/build/CustomConsole.js:172:10)
      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:22:13)
      at Timeout._onTimeout (3-UsingAPIs/Week1/homework/ex3-rollDie.js:35:24)

C:\Users\aoali\Desktop\HYF_PROJECT\Homework-class42\3-UsingAPIs\Week1\homework\ex3-rollDie.js:25
      reject(new Error('Oops... Die rolled off the table.'));
             ^

Error: Oops... Die rolled off the table.
    at rollOnce (C:\Users\aoali\Desktop\HYF_PROJECT\Homework-class42\3-UsingAPIs\Week1\homework\ex3-rollDie.js:25:14)
    at Timeout._onTimeout (C:\Users\aoali\Desktop\HYF_PROJECT\Homework-class42\3-UsingAPIs\Week1\homework\ex3-rollDie.js:35:24)
    at listOnTimeout (node:internal/timers:564:17)
    at processTimers (node:internal/timers:507:7)

Node.js v18.12.1